#!/bin/bash

cd /tmp

if [ -d /tmp/ccache ]; then

tg () {
	curl -s "https://api.telegram.org/bot${bot_api}/sendmessage" --data "text=$1&chat_id=${chat_id}"
}

case "$1" in
		 temp)
		 echo "Using temps.sh for upload"
		 up () {
  		if [ -e $1 ]; then
			curl --retry 18 --upload-file $1 temp.sh
			# 3d, 4000mb limit
  		fi
			}
		 ;;
		 gh)
		 echo "Using gh for upload"
		 repo_link=https://github.com/Prashant-1695/cirrus-build  # repo link to upload rom zip
		 echo $gh_token > mytoken.txt # login in github
		 gh auth login --with-token < mytoken.txt
		 gh release create ${rom}_ccache --generate-notes --repo $repo_link # create a release tag
		 up () {
  		if [ -e $1 ]; then
			gh release upload --clobber ${rom}_ccache $1 --repo $repo_link
			echo "Link: $repo_link/releases/download/${rom}_ccache/$1"
  		fi
			}
esac

# Compress function with pigz for faster compression
com ()
{
    tar --use-compress-program="pigz -k -$2 " -cf $1.tar.gz $1
}

# disable ccache upload if rom compilation was successful
cd rom/out/target/product/$(grep unch /tmp/ci/build -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)/
rom_zip=`ls *$(grep unch /tmp/ci/build -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)*2022*.zip`

if [ ! -e $rom_zip ]; then

echo "|| Compressing CCACHE ||"
cd /tmp

# First compress in with pigz in a single zip.
time com ccache 1 # Compression level 1, its enough

# Now split into parts (under 2gb to avoid issues with gh release)
7za a -tzip -v1980m -mx=0 ${rom}_ccache_backup.zip ccache.tar.gz

# upload all parts
echo "|| Uploading CCACHE ||"
for i in ${rom}_ccache_backup.zip.*; do
	send_zip=$(up $i) && tg "CCACHE Uploaded!
	$send_zip"
done

sleep 5
echo "|| Uploaded ||"
fi
fi

echo "|| Clean storage ||"
rm -rf /tmp/rom
echo "|| Done ||"
