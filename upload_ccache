#!/bin/bash

cd /tmp

if [ -d /tmp/ccache ]; then

tg () {
	curl -s "https://api.telegram.org/bot${bot_api}/sendmessage" --data "text=$1&chat_id=${chat_id}"
}

if [ $2 == temp ]; then
up () {
  if [ -e $1 ]; then
	curl --retry 18 --upload-file $1 temp.sh
	# 3d, 4000mb limit
  fi
}
elif [ $2 == gh ]; then
repo_link=https://github.com/ImPrashantt/cirrus-build  # repo link to upload rom zip
echo $gh_token > mytoken.txt # login in github
gh auth login --with-token < mytoken.txt
gh release create ${rom}_ccache --generate-notes --repo $repo_link # create a release tag
up () {
  if [ -e $1 ]; then
  gh release upload --clobber ${rom}_ccache $1 --repo $repo_link 
  echo "Link: $repo_link/releases/download/${rom}_ccache/$1"
  fi
}
fi

# Compress function with pigz for faster compression
com ()
{
    tar --use-compress-program="pigz -k -$2 " -cf $1.tar.gz $1
}

# disable ccache upload if rom compilation was successful
if [ ! -e rom/out/target/product/*/*2022*zip ]; then
echo "|| Compressing CCACHE ||"

# First compress in with pigz in a single zip.
time com ccache 1 # Compression level 1, its enough

# Now split into parts (under 2gb to avoid issues with gh release)
if [ $1 == temp ]; then
	7za a -tzip -v1980m -mx=0 ${rom}_ccache_backup.zip ccache.tar.gz
	# upload all parts
	echo "|| Uploading CCACHE ||"
	for i in /tmp/${rom}_ccache_backup.zip.*; do
	   send_zip=$(up $i) && tg "CCACHE Uploaded!
$send_zip"
	done
fi

sleep 5
echo "|| Uploaded ||"
fi
fi

echo "|| Clean storage ||"
rm -rf /tmp/rom
echo "|| Done ||"
